{"version":3,"sources":["Constants/constants.js","reportWebVitals.js","Routing/constants.js","Store/Profile/selectors.js","Store/Profile/constants.js","Store/Profile/actions.js","Screens/Profile/Profile.jsx","Screens/Main/Main.jsx","Components/Form/Form.jsx","Components/Message/Message.jsx","Components/MessageList/MessageList.jsx","Store/Chats/constants.js","Store/Chats/actions.js","Store/Chats/reducer.js","Store/Chats/selectors.js","Store/Messages/constants.js","Store/Messages/actions.js","Store/Messages/selectors.js","Store/Messages/reducer.js","Components/ChatListItem/ChatListItem.jsx","Components/ChatList/ChatList.jsx","Components/CreateChatModal/CreateChatModal.jsx","Hooks/useAddChat.js","Screens/Chat/Chat.jsx","Components/NotFound/NotFound.jsx","Screens/Chats/Chats.jsx","Components/Navigation/Navigation.jsx","Screens/NoChat/NoChat.jsx","Store/CatRandom/constants.js","Store/CatRandom/actions.js","Api/constants.js","Store/CatRandom/reducer.js","Store/CatRandom/selectors.js","Screens/CatRandom/CatRandom.jsx","Components/FormAuth/FormAuth.jsx","Screens/Signup/Signup.jsx","Screens/Signin/Signin.jsx","Routing/PublicRoute.jsx","Routing/PrivateRoute.jsx","Store/Profile/reducer.js","Routing/Router.jsx","Store/index.js","App.jsx","Services/firebase.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ROUTES","profileSelector","store","profile","SHOW_NAME_ACTION","AUTHED_BOOL_ACTION","authedBoolAction","user","type","Profile","useSelector","name","showName","dispatch","useDispatch","checked","onChange","Main","Form","React","memo","submit","ref","useRef","useState","value","setValue","transitValue","useCallback","current","focus","changeFormValue","e","target","useEffect","Box","sx","display","height","TextField","inputRef","fullWidth","Button","onClick","variant","endIcon","AUTOR","INITIAL_STATE_CHATS","Array","from","length","faker","findName","avatar","image","id","datatype","uuid","INITIAL_STATE_MESSAGES","chat","Math","floor","random","_","i","text","lorem","autor","Message","message","flexDirection","className","MessageList","messageList","overflow","map","index","ADD_CHAT","REMOVE_CHAT","removeChatAction","chatId","initialState","chatList","chatsSelector","chats","ADD_MESSAGE","REMOVE_MESSAGES_CHAT","CHANGE_MESSAGES","addMessageActionWithThunk","messageId","messageID","addMessageAction","removeMessagesChatAction","messagesSelector","messages","ChatListItem","props","removeChatListItem","a","firebase","database","child","remove","removeChatWithFirebase","removeMessagesWithFirebase","Grid","container","justifyContent","item","xs","exact","to","activeClassName","ListItem","alignItems","ListItemAvatar","Avatar","src","ListItemText","primary","Divider","IconButton","ChatList","Paper","List","CreateChatModal","open","setOpen","newChatName","setNewChatName","disabled","setDisabled","handleClose","color","Dialog","onClose","DialogTitle","DialogContent","autoFocus","margin","label","DialogActions","onAddChat","useAddChat","push","Chat","setMessageList","setChatId","generalMessageList","params","useParams","find","setTimeout","addMessageWithFirebase","spacing","rowSpacing","direction","padding","NotFound","Chats","alignContent","Navigation","Breadcrumbs","NoChat","Container","bgcolor","GET_CAT_START","GET_CAT_SUCCESS","GET_CAT_ERROR","getCatRequest","fetch","response","ok","Error","status","json","result","payload","url","loading","error","catRandomSelector","catRandom","CatRandom","imageCat","handleGetCat","CircularProgress","alt","FormAuth","handleSubmit","email","setEmail","password","setPassword","placeholder","size","Signup","setError","auth","createUserWithEmailAndPassword","Signin","signInWithEmailAndPassword","PublicRoute","authed","rest","PrivateRoute","Router","onAuthStateChanged","set","setInitialMessagesWithFirebase","chatWithFirebase","forEach","setInitialChatsWithFirebase","getState","on","snapshot","key","snap","val","Id","newMessage","newChat","path","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","storage","rootReducer","combineReducers","state","action","filter","currentChatIdMessages","restMessageList","persistedReducer","persistReducer","createStore","applyMiddleware","thunk","persistor","persistStore","App","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd94501e.chunk.js","sourcesContent":["import faker from \"faker\";\r\n\r\nexport const AUTOR = \"autor\";\r\n\r\nexport const INITIAL_STATE_CHATS = Array.from({ length: 10 }, () => {\r\n  return {\r\n    name: faker.name.findName(),\r\n    avatar: faker.image.avatar(),\r\n    id: faker.datatype.uuid(),\r\n  };\r\n});\r\n\r\nexport let INITIAL_STATE_MESSAGES = {};\r\nfor (let chat of INITIAL_STATE_CHATS) {\r\n  INITIAL_STATE_MESSAGES = {\r\n    ...INITIAL_STATE_MESSAGES,\r\n    [chat.id]: Array.from(\r\n      { length: Math.floor(Math.random() * 10) },\r\n      (_, i) => {\r\n        if (i % 2 !== 0) {\r\n          return {\r\n            text: faker.lorem.text(),\r\n            autor: AUTOR,\r\n            id: faker.datatype.uuid(),\r\n          };\r\n        } else {\r\n          return {\r\n            text: faker.lorem.text(),\r\n            autor: chat.name,\r\n            id: faker.datatype.uuid(),\r\n          };\r\n        }\r\n      }\r\n    ),\r\n  };\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const ROUTES = {\r\n  MAIN: \"/\",\r\n  PROFILE: \"/profile\",\r\n  CHATS: \"/chats\",\r\n  CHAT: \"/chat\",\r\n  NOCHAT: \"/nochat\",\r\n  CAT_RANDOM: \"/cat\",\r\n  SIGNUP: \"/signup\",\r\n  SIGNIN: \"/signin\",\r\n};\r\n","export const profileSelector = (store) => store.profile;","export const SHOW_NAME_ACTION = 'PROFILE::SHOW_NAME_ACTION';\r\nexport const AUTHED_BOOL_ACTION = 'PROFILE::AUTHED_BOOL_ACTION';","import { AUTHED_BOOL_ACTION, SHOW_NAME_ACTION } from \"./constants\";\r\nimport firebase from \"firebase\";\r\n\r\nexport const showNameAction = () => {\r\n  return { type: SHOW_NAME_ACTION };\r\n};\r\n\r\nexport const authedBoolAction = (user) => {\r\n  return { type: AUTHED_BOOL_ACTION, user };\r\n};\r\n\r\nexport const authedBoolWithFirebase = () => (dispatch) => {\r\n  firebase.auth().onAuthStateChanged((user) => {\r\n    if (user) {\r\n      dispatch(authedBoolAction(true));\r\n    } else {\r\n      dispatch(authedBoolAction(false));\r\n    }\r\n  });\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { profileSelector } from \"../../Store/Profile/selectors\";\r\nimport { showNameAction } from \"../../Store/Profile/actions\";\r\n\r\nexport const Profile = () => {\r\n    const { name, showName } = useSelector(profileSelector);\r\n    const dispatch = useDispatch();\r\n\r\n    const toogleShowName = () => {\r\n        dispatch(showNameAction());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Profile Page</h3>\r\n            <input type=\"checkbox\" checked={showName} onChange={toogleShowName} />\r\n            <div>{showName && name}</div>\r\n        </>\r\n    )\r\n}","export const Main = () => {\r\n    return (\r\n            <h3>Home Page</h3>\r\n    )\r\n}","import { Button, TextField } from \"@mui/material\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { useEffect, useRef, useState, useCallback } from \"react\";\r\nimport { Box } from \"@mui/system\";\r\nimport React from \"react\";\r\n\r\nexport const Form = React.memo(({ submit }) => {\r\n  const ref = useRef(null);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const transitValue = useCallback(() => {\r\n    submit(value);\r\n    setValue(\"\");\r\n    ref.current?.focus();\r\n  }, [value])\r\n\r\n  const changeFormValue = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    ref.current?.focus();\r\n  }, [])\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', height: '57px' }}>\r\n      <TextField\r\n        value={value}\r\n        onChange={changeFormValue}\r\n        inputRef={ref}\r\n        fullWidth='true'\r\n      />\r\n      <Button onClick={transitValue} variant=\"contained\" endIcon={<SendIcon />}></Button>\r\n    </Box>\r\n  );\r\n});\r\n","import { Box } from \"@mui/system\";\r\nimport { AUTOR } from \"../../Constants\";\r\nimport \"./style.css\";\r\n\r\nexport const Message = ({ message }) => {\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n      <div className={`message-${message.autor === AUTOR ? \"autor\" : \"robot\"}`}>\r\n        {message.text}\r\n        <span className=\"signature\">{message.autor}</span>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n","import { Box } from \"@mui/system\";\r\nimport { Message } from \"../Message\";\r\n\r\nexport const MessageList = ({ messageList }) => {\r\n  return (\r\n    <Box sx={{ height: 'calc(89vh - 57px)', overflow: 'auto' }}>\r\n      {messageList.map((message, index) => (\r\n        <Message key={index} message={message}></Message>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n","export const ADD_CHAT = 'CHATS::ADD_CHAT';\r\nexport const REMOVE_CHAT = 'CHATS::REMOVE_CHAT';","import { INITIAL_STATE_CHATS } from \"../../Constants\";\r\nimport { ADD_CHAT, REMOVE_CHAT } from \"./constants\";\r\nimport firebase from \"firebase\";\r\nimport faker from \"faker\";\r\nimport { chatsSelector } from \".\";\r\n\r\nexport const setInitialChatsWithFirebase =\r\n  (chats = INITIAL_STATE_CHATS) =>\r\n  async () => {\r\n    let chatWithFirebase = {};\r\n    chats.forEach((chat) => {\r\n      chatWithFirebase = {\r\n        ...chatWithFirebase,\r\n        [chat.id]: { id: chat.id, name: chat.name, avatar: chat.avatar },\r\n      };\r\n    });\r\n    firebase.database().ref(\"chats\").set(chatWithFirebase);\r\n  };\r\n\r\nexport const initChatsTracking = () => (dispatch, getState) => {\r\n  firebase\r\n    .database()\r\n    .ref(\"chats\")\r\n    .on(\"child_added\", (snapshot) => {\r\n      const chatList = chatsSelector(getState());\r\n      const newChat = { ...snapshot.val(), id: snapshot.key };\r\n      const checkChat = chatList.find((chat) => chat.id === snapshot.key);\r\n      !checkChat && dispatch({ type: ADD_CHAT, newChat });\r\n    });\r\n  firebase\r\n    .database()\r\n    .ref(\"chats\")\r\n    .on(\"child_removed\", (snapshot) => {\r\n      const chatList = chatsSelector(getState());\r\n      const checkChat = chatList.find((chat) => chat.id === snapshot.key);\r\n      checkChat && dispatch(removeChatAction(snapshot.key));\r\n    });\r\n};\r\n\r\nexport const addChatWithFirebase = (name) => async () => {\r\n  firebase.database().ref(\"chats\").push({ name, avatar: faker.image.avatar() });\r\n};\r\n\r\nexport const removeChatWithFirebase = (chatId) => async () => {\r\n  firebase.database().ref(\"chats\").child(chatId).remove();\r\n};\r\n\r\nexport const removeChatAction = (chatId) => {\r\n  return {\r\n    type: REMOVE_CHAT,\r\n    chatId,\r\n  };\r\n};\r\n","import { INITIAL_STATE_CHATS } from \"../../Constants/constants\";\r\nimport { ADD_CHAT, REMOVE_CHAT } from \"../Chats\";\r\n\r\nconst initialState = {\r\n  chatList: INITIAL_STATE_CHATS,\r\n};\r\n\r\nexport const chatsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CHAT:\r\n      return {\r\n        ...state,\r\n        chatList: [...state.chatList, action.newChat],\r\n      };\r\n    case REMOVE_CHAT:\r\n      return {\r\n        ...state,\r\n        chatList: state.chatList.filter((chat) => chat.id !== action.chatId),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const chatsSelector = (store) => store.chats.chatList;","export const ADD_MESSAGE = 'MESSAGES::ADD_MESSAGE';\r\nexport const REMOVE_MESSAGES_CHAT = 'MESSAGES::REMOVE_MESSAGES_CHAT';\r\nexport const CHANGE_MESSAGES = 'MESSAGES::CHANGE_MESSAGES';","import faker from \"faker\";\r\nimport firebase from \"firebase\";\r\nimport { INITIAL_STATE_MESSAGES } from \"../../Constants\";\r\nimport { ADD_MESSAGE, REMOVE_MESSAGES_CHAT } from \"./constants\";\r\nimport { messagesSelector } from \".\";\r\n\r\nexport const setInitialMessagesWithFirebase =\r\n  (messages = INITIAL_STATE_MESSAGES) =>\r\n  async () => {\r\n    firebase.database().ref(\"messages\").set(messages);\r\n  };\r\n\r\nexport const addMessageWithFirebase = (value, autor, chat) => async () => {\r\n  firebase\r\n    .database()\r\n    .ref(\"messages\")\r\n    .child(chat.id)\r\n    .push({ text: value, autor, id: faker.datatype.uuid() });\r\n  setTimeout(\r\n    () =>\r\n      firebase\r\n        .database()\r\n        .ref(\"messages\")\r\n        .child(chat.id)\r\n        .push({\r\n          text: faker.lorem.text(),\r\n          autor: chat.name,\r\n          id: faker.datatype.uuid(),\r\n        }),\r\n    1500\r\n  );\r\n};\r\n\r\nexport const initMessageTracking = () => (dispatch, getState) => {\r\n  firebase\r\n    .database()\r\n    .ref(\"messages\")\r\n    .on(\"child_changed\", (snapshot) => {\r\n      const chatId = snapshot.key;\r\n      let message = {};\r\n      snapshot.forEach((snap) => {\r\n        message = snap.val();\r\n      });\r\n      dispatch(\r\n        addMessageActionWithThunk(\r\n          message.text,\r\n          message.autor,\r\n          chatId,\r\n          message.Id\r\n        )\r\n      );\r\n    });\r\n  firebase\r\n    .database()\r\n    .ref(\"messages\")\r\n    .on(\"child_added\", (snapshot) => {\r\n      const chatId = snapshot.key;\r\n      const messageList = messagesSelector(getState());\r\n      let newMessage = {};\r\n      snapshot.forEach((snap) => (newMessage = snap.val()));\r\n      const checkMessage = messageList[chatId]?.find((message) => {\r\n        return newMessage.id === message.id;\r\n      });\r\n      !checkMessage &&\r\n        dispatch(\r\n          addMessageActionWithThunk(\r\n            newMessage.text,\r\n            newMessage.autor,\r\n            chatId,\r\n            newMessage.Id\r\n          )\r\n        );\r\n    });\r\n  firebase\r\n    .database()\r\n    .ref(\"messages\")\r\n    .on(\"child_removed\", (snapshot) => {\r\n      dispatch(removeMessagesChatAction(snapshot.key));\r\n    });\r\n};\r\n\r\nexport const addMessageAction = (text, autor, chatId, messageID) => {\r\n  return {\r\n    type: ADD_MESSAGE,\r\n    text,\r\n    autor,\r\n    chatId,\r\n    messageID,\r\n  };\r\n};\r\n\r\nexport const addMessageActionWithThunk =\r\n  (text, autor, chatId, messageId) => (dispatch) => {\r\n    dispatch(addMessageAction(text, autor, chatId, messageId));\r\n  };\r\n\r\nexport const removeMessagesChatAction = (chatId) => {\r\n  return {\r\n    type: REMOVE_MESSAGES_CHAT,\r\n    chatId,\r\n  };\r\n};\r\n\r\nexport const removeMessagesWithFirebase = (chatId) => async () => {\r\n  firebase.database().ref(\"messages\").child(chatId).remove();\r\n};\r\n","export const messagesSelector = (store) => store.messages.messageList;","import { CHANGE_MESSAGES } from \".\";\r\nimport { INITIAL_STATE_MESSAGES } from \"../../Constants\";\r\nimport { ADD_MESSAGE, REMOVE_MESSAGES_CHAT } from \"./constants\";\r\n\r\nconst initialState = {\r\n  messageList: INITIAL_STATE_MESSAGES,\r\n};\r\n\r\nexport const messagesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_MESSAGES:\r\n      return {\r\n        ...state,\r\n        messageList: [action.messages],\r\n      };\r\n    case ADD_MESSAGE:\r\n      const currentChatIdMessages = state.messageList[action.chatId] ?? [];\r\n      return {\r\n        ...state,\r\n        messageList: {\r\n          ...state.messageList,\r\n          [action.chatId]: [\r\n            ...currentChatIdMessages,\r\n            {\r\n              text: action.text,\r\n              autor: action.autor,\r\n              id: action.messageId,\r\n            },\r\n          ],\r\n        },\r\n      };\r\n    case REMOVE_MESSAGES_CHAT:\r\n      const { [action.chatId]: messagesToDelete, ...restMessageList } =\r\n        state.messageList;\r\n      return {\r\n        ...state,\r\n        messageList: { ...restMessageList },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import Divider from '@mui/material/Divider';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Grid, ListItem } from \"@mui/material\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ROUTES } from '../../Routing/constants';\r\nimport { IconButton } from '@material-ui/core';\r\nimport './style.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeChatWithFirebase } from '../../Store/Chats';\r\nimport { removeMessagesWithFirebase } from '../../Store/Messages';\r\n\r\nexport const ChatListItem = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const removeChatListItem = (chatId) => {\r\n    dispatch(removeChatWithFirebase(chatId));\r\n    dispatch(removeMessagesWithFirebase(chatId));\r\n  };\r\n\r\n  return (\r\n    <Grid container justifyContent=\"space-between\">\r\n      <Grid item xs={10}>\r\n        <NavLink exact to={`${ROUTES.CHAT}/${props.chat.id}`} activeClassName=\"selected\" className=\"chat-item\">\r\n          <ListItem alignItems=\"flex-start\">\r\n            <ListItemAvatar>\r\n              <Avatar src={props.chat.avatar}></Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={props.chat.name}\r\n            />\r\n          </ListItem>\r\n          <Divider variant=\"inset\" />\r\n        </NavLink>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <IconButton aria-label=\"delete\" >\r\n          <DeleteIcon onClick={() => removeChatListItem(props.chat.id)} />\r\n        </IconButton>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { List, Paper } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { ChatListItem } from \"../ChatListItem\";\r\nimport \"./style.css\"\r\n\r\nexport const ChatList = React.memo(({ chatList }) => {\r\n  return (\r\n    <Paper>\r\n      <List className=\"list\">\r\n        {chatList.map((chat) => (\r\n          <ChatListItem key={chat.id} chat={chat}></ChatListItem>\r\n        ))}\r\n      </List>\r\n    </Paper>\r\n  );\r\n});\r\n","import { Button, Dialog, DialogContent, DialogTitle, TextField } from \"@material-ui/core\";\r\nimport { DialogActions } from \"@mui/material\";\r\nimport { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport const CreateChatModal = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [newChatName, setNewChatName] = useState(\"\");\r\n    const [disabled, setDisabled] = useState(true);\r\n\r\n    const handleOpen = () => setOpen(!open);\r\n\r\n    const handleClose = useCallback(() => {\r\n        setNewChatName(\"\");\r\n        setOpen(false);\r\n    }, []);\r\n\r\n    const transitNewChatName = () => {\r\n        props.onAddChat(newChatName);\r\n        setNewChatName(\"\");\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChange = (e) => setNewChatName(e.target.value);\r\n\r\n    useEffect(() => {\r\n        setDisabled(!newChatName);\r\n    }, [newChatName])\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleOpen} >\r\n                Add chat\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Please enter the chat name</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"name:\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        value={newChatName}\r\n                        onChange={handleChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                    <Button onClick={transitNewChatName} disabled={disabled}>Submit</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}","import { useDispatch } from \"react-redux\"\r\nimport { addChatWithFirebase } from \"../Store/Chats\";\r\n\r\nexport const useAddChat = () => {\r\n    const dispatch = useDispatch();\r\n    return (newChatName) => dispatch(addChatWithFirebase(newChatName));\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Form } from \"../../Components/Form\";\r\nimport { MessageList } from \"../../Components/MessageList\";\r\nimport { ChatList } from \"../../Components/ChatList\";\r\nimport { AUTOR } from \"../../Constants\";\r\nimport { Redirect, useParams } from \"react-router\";\r\nimport { ROUTES } from \"../../Routing/constants\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { chatsSelector } from \"../../Store/Chats/selectors\";\r\nimport { messagesSelector } from \"../../Store/Messages/selectors\";\r\nimport { CreateChatModal } from \"../../Components/CreateChatModal\";\r\nimport { addMessageWithFirebase } from \"../../Store/Messages\";\r\nimport { useAddChat } from \"../../Hooks\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\n\r\nexport const Chat = () => {\r\n    const [messageList, setMessageList] = useState([]);\r\n    const [chatId, setChatId] = useState(true);\r\n    const onAddChat = useAddChat();\r\n\r\n    const generalMessageList = useSelector(messagesSelector);\r\n    const chatList = useSelector(chatsSelector);\r\n    const dispatch = useDispatch();\r\n\r\n    const params = useParams();\r\n\r\n    const submit = useCallback((value) => {\r\n        const chat = chatList.find((chat) => chat.id === params.id);\r\n        dispatch(addMessageWithFirebase(value, AUTOR, chat));\r\n    },[params]);\r\n\r\n    useEffect(() => {\r\n        const chat = chatList.find((chat) => chat.id === params.id)\r\n        if (chat) {\r\n            setMessageList(generalMessageList[chat.id] ?? []);\r\n        } else {\r\n            setChatId(false);\r\n        }\r\n    }, [params, generalMessageList]);\r\n\r\n    if (!chatId) {\r\n        return <Redirect to={ROUTES.NOCHAT} />\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={3} rowSpacing={-3}>\r\n            <Grid item xs={4} container=\"true\" direction=\"column\" justifyContent=\"center\">\r\n                <ChatList chatList={chatList} />\r\n                <CreateChatModal onAddChat={onAddChat} />\r\n            </Grid>\r\n            <Grid item xs={8} sx={{ height: 'calc(100vh - 5vh)', padding: '3vh 0' }} container=\"true\" direction=\"column\" justifyContent=\"space-between\">\r\n                <MessageList messageList={messageList} />\r\n                <Form submit={submit} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","export const NotFound = () => {\r\n    return (\r\n            <p>Page not found!</p>\r\n    )\r\n}","import { useSelector } from \"react-redux\"\r\nimport { ChatList } from \"../../Components/ChatList\"\r\nimport { chatsSelector } from \"../../Store/Chats/selectors\"\r\nimport { CreateChatModal } from \"../../Components/CreateChatModal\";\r\nimport { useAddChat } from \"../../Hooks\"\r\nimport { Grid } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport const Chats = () => {\r\n    const chatList = useSelector(chatsSelector);\r\n    const onAddChat = useAddChat();\r\n\r\n    return (\r\n            <Grid container spacing={3} rowSpacing={-3}>\r\n                <Grid item xs={4} container=\"true\" direction=\"column\" justifyContent=\"center\">\r\n                    <ChatList chatList={chatList} />\r\n                    <CreateChatModal onAddChat={onAddChat} />\r\n                </Grid>\r\n                <Grid item xs={8} sx={{ height: 'calc(100vh - 5vh)', padding: '3vh 0' }} container=\"true\" direction=\"column\" justifyContent=\"center\" alignContent=\"center\">\r\n                    <span>Please select a chat</span>\r\n                </Grid>\r\n            </Grid>\r\n    )\r\n};","import { Breadcrumbs } from \"@material-ui/core\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ROUTES } from \"../../Routing/constants\";\r\nimport \"./style.css\"\r\n\r\nexport const Navigation = () => {\r\n  return (\r\n    <Breadcrumbs className=\"breadcrumbs\">\r\n      <NavLink exact activeClassName=\"selected\" to={ROUTES.MAIN}>Main</NavLink>\r\n      <NavLink exact activeClassName=\"selected\" to={ROUTES.PROFILE}>Profile</NavLink>\r\n      <NavLink exact activeClassName=\"selected\" to={ROUTES.CHATS}>Chats</NavLink>\r\n      <NavLink exact activeClassName=\"selected\" to={ROUTES.CAT_RANDOM}>Cat_Random</NavLink>\r\n      <NavLink exact activeClassName=\"selected\" to={ROUTES.SIGNUP}>Sign up</NavLink>\r\n      <NavLink exact activeClassName=\"selected\" to={ROUTES.SIGNIN}>Sign in</NavLink>\r\n    </Breadcrumbs>\r\n  )\r\n}","import { Container, Grid } from \"@mui/material\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { chatsSelector } from \"../../Store/Chats/selectors\"\r\nimport { ChatList } from \"../../Components/ChatList\"\r\nimport { CreateChatModal } from \"../../Components/CreateChatModal\"\r\nimport { useAddChat } from \"../../Hooks\"\r\n\r\nexport const NoChat = () => {\r\n    const chatList = useSelector(chatsSelector);\r\n    const onAddChat = useAddChat();\r\n\r\n    return (\r\n        <Container sx={{ bgcolor: '#cfe8fc', height: '100vh' }}>\r\n            <Grid container spacing={3} rowSpacing={-3}>\r\n                <Grid item xs={4} container=\"true\" direction=\"column\" justifyContent=\"center\">\r\n                    <ChatList chatList={chatList} />\r\n                    <CreateChatModal onAddChat={onAddChat} />\r\n                </Grid>\r\n                <Grid item xs={8} sx={{ height: 'calc(100vh - 5vh)', padding: '3vh 0' }} container=\"true\" direction=\"column\" justifyContent=\"center\" alignContent=\"center\">\r\n                    <span>Please select a chat</span>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","export const GET_CAT_START = 'CATS_RANDOM::GET_CAT_START';\r\nexport const GET_CAT_SUCCESS = 'CATS_RANDOM::GET_CAT_SUCCESS';\r\nexport const GET_CAT_ERROR = 'CATS_RANDOM::GET_CAT_ERROR';","import { CAT_URL } from \"../../Api/constants\";\r\nimport { GET_CAT_ERROR, GET_CAT_START, GET_CAT_SUCCESS } from \"./constants\";\r\n\r\nconst getCatStartAction = () => ({ type: GET_CAT_START });\r\nconst getCatSuccessAction = (payload) => ({ type: GET_CAT_SUCCESS, payload });\r\nconst getCatErrorAction = () => ({ type: GET_CAT_ERROR });\r\n\r\nexport const getCatRequest = () => async (dispatch) => {\r\n  dispatch(getCatStartAction());\r\n\r\n  try {\r\n    const response = await fetch(CAT_URL);\r\n\r\n    if (!response.ok) {\r\n      throw new Error(response.status);\r\n    }\r\n\r\n    const result = await response.json();\r\n    dispatch(getCatSuccessAction(result.url));\r\n  } catch {\r\n    dispatch(getCatErrorAction());\r\n  }\r\n};","export const CAT_URL = \"https://cataas.com/cat?json=true\";","import { GET_CAT_ERROR, GET_CAT_START, GET_CAT_SUCCESS } from \"./constants\";\r\n\r\nconst initialState = {\r\n  image: null,\r\n  loading: true,\r\n  error: false,\r\n};\r\n\r\nexport const catRandomReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CAT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        image: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_CAT_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n      };\r\n      case GET_CAT_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const catRandomSelector = (store) => store.catRandom;","import { Button, CircularProgress } from \"@material-ui/core\";\r\nimport { useCallback } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { catRandomSelector } from \"../../Store/CatRandom\";\r\nimport { getCatRequest } from \"../../Store/CatRandom/actions\";\r\nimport \"./style.css\"\r\n\r\nexport const CatRandom = () => {\r\n    const { image: imageCat, loading, error } = useSelector(catRandomSelector);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleGetCat = useCallback(() => {\r\n        dispatch(getCatRequest());\r\n    },[]);\r\n\r\n    useEffect(() => dispatch(getCatRequest()), []);\r\n\r\n    if (loading) {\r\n        return <CircularProgress />\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <>\r\n                <h3>Error</h3>\r\n                <Button onClick={handleGetCat}>Retry</Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"cat\">\r\n            <img className=\"cat-img\" src={`https://cataas.com/${imageCat}`} alt=\"catRandom\" />\r\n            <Button  variant=\"contained\" onClick={handleGetCat}>Change image</Button>\r\n        </div>\r\n    )\r\n}","import { Button, Grid, TextField } from \"@mui/material\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport const FormAuth = ({ handleSubmit }) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleEmailChange = (e) => { setEmail(e.target.value) };\r\n    const handlePasswordChange = (e) => { setPassword(e.target.value) };\r\n\r\n    return (\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n            <Grid item>\r\n                <TextField className=\"text-field\"\r\n                    margin=\"normal\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={handleEmailChange}\r\n                    autoFocus=\"true\"\r\n                    placeholder=\"e-mail\"\r\n                />\r\n            </Grid>\r\n            <Grid item>\r\n                <TextField className=\"text-field\"\r\n                    margin=\"normal\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={handlePasswordChange}\r\n                    placeholder=\"password\"\r\n                />\r\n            </Grid>\r\n            <Grid item>\r\n                <Button onClick={() => handleSubmit(email, password)} size=\"large\" variant=\"contained\" endIcon={<SendIcon />}>Send</Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ROUTES } from \"../../Routing/constants\";\r\nimport { FormAuth } from \"../../Components/FormAuth/FormAuth\";\r\n\r\nexport const Signup = () => {\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleSubmit = async (email, password) => {\r\n        setError(\"\");\r\n        try {\r\n            await firebase.auth().createUserWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <p>Fill in the form below to register new account.</p>\r\n            <FormAuth handleSubmit={handleSubmit} />\r\n            {error && <p>{error}</p>}\r\n            <p>Already have an account? <Link to={ROUTES.SIGNIN}>Sign in</Link></p>\r\n        </>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ROUTES } from \"../../Routing/constants\";\r\nimport { FormAuth } from \"../../Components/FormAuth/FormAuth\";\r\n\r\nexport const Signin = () => {\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleSubmit = async (email, password) => {\r\n        setError(\"\");\r\n        try {\r\n            await firebase.auth().signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <p>Fill in the form below to login to your account.</p>\r\n            <FormAuth handleSubmit={handleSubmit} />\r\n            {error && <p>{error}</p>}\r\n            <p>Don't have an account? <Link to={ROUTES.SIGNUP}>Sign up</Link></p>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\nimport { ROUTES } from \"./constants\";\r\n\r\nexport const PublicRoute = React.memo(({ authed, ...rest }) => {\r\n    return !authed ? <Route {...rest} /> : <Redirect to={ROUTES.CHATS} />;\r\n});","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\nimport { ROUTES } from \"./constants\";\r\n\r\nexport const PrivateRoute = React.memo(({ authed, ...rest }) => {\r\n    return authed ? <Route {...rest} /> : <Redirect to={ROUTES.SIGNIN} />;\r\n});","import { SHOW_NAME_ACTION } from \"../Profile\";\r\nimport { AUTHED_BOOL_ACTION } from \"./constants\";\r\n\r\nconst initialState = {\r\n  showName: true,\r\n  name: \"Vasya\",\r\n  authed: false,\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTHED_BOOL_ACTION:\r\n      return {\r\n        ...state,\r\n        authed: action.user,\r\n      };\r\n    case SHOW_NAME_ACTION:\r\n      return {\r\n        ...state,\r\n        showName: !state.showName,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { BrowserRouter, Switch } from \"react-router-dom\";\r\nimport { ROUTES } from \"./constants\";\r\nimport { Profile } from \"../Screens/Profile\";\r\nimport { Main } from \"../Screens/Main\";\r\nimport { Chat } from \"../Screens/Chat\";\r\nimport { NotFound } from \"../Components/NotFound\";\r\nimport { Chats } from \"../Screens/Chats\"\r\nimport { Navigation } from \"../Components/Navigation\";\r\nimport { NoChat } from \"../Screens/NoChat/NoChat\";\r\nimport { CatRandom } from \"../Screens/CatRandom/CatRandom\";\r\nimport { Signup } from \"../Screens/Signup/Signup\";\r\nimport { Signin } from \"../Screens/Signin/Signin\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Container } from \"@mui/material\";\r\nimport { messagesSelector, setInitialMessagesWithFirebase } from \"../Store/Messages\";\r\nimport { chatsSelector, initChatsTracking, setInitialChatsWithFirebase } from \"../Store/Chats\";\r\nimport { initMessageTracking } from \"../Store/Messages/actions\";\r\nimport { authedBoolWithFirebase, profileSelector } from \"../Store/Profile\";\r\nimport \"./style.css\";\r\n\r\nexport const Router = () => {\r\n    const dispatch = useDispatch();\r\n    const { authed } = useSelector(profileSelector);\r\n    const messages = useSelector(messagesSelector);\r\n    const chats = useSelector(chatsSelector);\r\n\r\n    useEffect(() => {\r\n        dispatch(authedBoolWithFirebase())\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(setInitialMessagesWithFirebase(messages));\r\n        dispatch(setInitialChatsWithFirebase(chats));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(initMessageTracking());\r\n        dispatch(initChatsTracking());\r\n    }, []);\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Container className=\"container\">\r\n                <Navigation />\r\n                <Switch>\r\n                    <PrivateRoute authed={authed} exact path={ROUTES.MAIN}>\r\n                        <Main />\r\n                    </PrivateRoute>\r\n                    <PrivateRoute authed={authed} exact path={ROUTES.PROFILE}>\r\n                        <Profile />\r\n                    </PrivateRoute>\r\n                    <PrivateRoute authed={authed} exact path={ROUTES.CHATS}>\r\n                        <Chats />\r\n                    </PrivateRoute>\r\n                    <PrivateRoute authed={authed} exact path={`${ROUTES.CHAT}/:id`}>\r\n                        <Chat />\r\n                    </PrivateRoute>\r\n                    <PrivateRoute authed={authed} exact path={ROUTES.CAT_RANDOM}>\r\n                        <CatRandom />\r\n                    </PrivateRoute>\r\n                    <PublicRoute authed={authed} exact path={ROUTES.SIGNUP}>\r\n                        <Signup />\r\n                    </PublicRoute>\r\n                    <PublicRoute authed={authed} exact path={ROUTES.SIGNIN}>\r\n                        <Signin />\r\n                    </PublicRoute>\r\n                    <PrivateRoute authed={authed} exact path={ROUTES.NOCHAT}>\r\n                        <NoChat />\r\n                    </PrivateRoute>\r\n                    <PrivateRoute authed={authed} >\r\n                        <NotFound />\r\n                    </PrivateRoute>\r\n                </Switch>\r\n            </Container>\r\n        </BrowserRouter>\r\n    )\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { chatsReducer } from \"./Chats\";\r\nimport { messagesReducer } from \"./Messages\";\r\nimport { profileReducer } from \"./Profile\";\r\nimport { catRandomReducer } from \"./CatRandom/reducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  profile: profileReducer,\r\n  chats: chatsReducer,\r\n  messages: messagesReducer,\r\n  catRandom: catRandomReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n","import { Provider } from \"react-redux\";\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { Router } from \"./Routing\";\r\nimport { persistor, store } from \"./Store\";\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <Router />\r\n      </PersistGate>\r\n    </Provider>\r\n  )\r\n}","// Import the functions you need from the SDKs you need\r\nimport firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDhlywq-HHUc0mMkX6v24b5DeqsTzswz7A\",\r\n  authDomain: \"react-course-bas.firebaseapp.com\",\r\n  databaseURL: \"https://react-course-bas-default-rtdb.firebaseio.com\",\r\n  projectId: \"react-course-bas\",\r\n  storageBucket: \"react-course-bas.appspot.com\",\r\n  messagingSenderId: \"390455142693\",\r\n  appId: \"1:390455142693:web:644a22876d48afdd2852cc\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { App } from \"./App\";\r\nimport \"./index.css\";\r\nimport \"./Services/firebase\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}